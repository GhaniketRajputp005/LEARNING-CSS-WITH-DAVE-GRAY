@import url("https://fonts.googleapis.com/css2?family=Nunito&display=swap");


Pseudo-selectors---> two types

1.psuedo-classes
 are used to define the special state of an element. e.g: hover, focus, active, etc of anchor element.
 a:hover, a:visited, a:active, a:focus, etc.
 colon is used to define pseudo-classes.

2.psuedo-elements
are used to style a specific part of an element. e.g: first-line, first-letter, before, after, etc.
double colon is used to define pseudo-elements.



html{
    scroll-behavior: smooth;
}

/* || RESET */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

img {
    display: block;

    /* max-width: 100vw; ye krne se image hmesha screen ke width ke hisab se adjust ho jayegi aur left to right fill ho jaegi , since 100vw h to uspr padding bhi kaam nhi kregi , coz use to hmesha 100vw width hi milegi */


    max-width: 100%;
    height: auto;
}


/* || Utility Classes */
.nowrap {
    white-space: nowrap;
}


/* || GENERAL STYLES */
body {
    font: 1.5rem "Nunito", sans-serif;
    min-height: 100vh;

    background-color: #475569;
    background-image: radial-gradient(whitesmoke, #475569);
    display: flex;
    flex-direction: column;
}



header,
footer {
    position: sticky;
    background-color: #1e293b;
    color: whitesmoke;
    text-align: center;
}

header {
    top: 0;
}

nav {
    background-color: #fff;
    
    padding: 0.5rem;
    border-bottom: 2px solid #000;
    font-weight: bolder;
    display: flex;
    justify-content: space-evenly;
}

/* nav a, nav a:visited {
    color: #000;
  
} */
nav a:any-link{ /*The :any-link CSS pseudo-class matches any element that acts as the source anchor of a hyperlink. */
    color: #000;
  
}

nav :is(a:hover,a:focus){ /*The :is() CSS pseudo-class function takes a selector list as its argument and selects any element that can be selected by one of the selectors in that list. */
    color:rgb(161, 199, 65);
}

nav a:active{  /*Descendant selector*/
    color: red;
}

main {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap:1.5rem;
    padding: 1rem;
 
}

footer {
    bottom: 0;
}


/* || PROFILE CLASS */

.card{
    scroll-margin-top: 8rem; 
    width: min(100%, 350px); /* fill outwhatever the container is upto350px */
    background-color: #eea3a3;
    border-radius: 15px;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    align-items: center; /*yha pr kyuki figure ke under figcaption h to vo center nhi hua tha , but jo quote h vo center ho gya, isliye hm figure ko bhi flex container bna denge*/

}

.card:target{ /*The :target CSS pseudo-class represents a unique element (the target element) with an id matching the URL's fragment. */
    border: 2px solid #bd2fda;
}

.card figure{
    display: flex;
    flex-flow: column nowrap;
}

.card img{
    border: 5px double #333;
    border-radius: 50%;

}

/* /* .card img[alt]{
    /* selects an image with an alt attribute. 
    border: 10px solid #ff6363;
  */
.card img :not([alt]){
    /* selects an image without an alt attribute. */
    border: 10px solid #ff6363;
}

.card:nth-child(even){ /*The :nth-child() CSS pseudo-class matches elements based on their position in a group of siblings. selects the 2 card itlsef*/
/* /depends on the position of cards in html only */
    background-color: papayawhip;
}

.card figcaption{
    text-align: center;
    margin: 1rem;
    font-size: 2rem;
    font-weight: bolder;
}


.card figcaption::after{
    /* The ::after pseudo-element is used to add a virtual element to the selected element. 
    yes it is virtual element and cant be selected by mouse pointer */
    content: 'ðŸ«¦';
    display: block;
}

.card figcaption::first-letter{
    font-size: 3rem;
    color: #bd2fda;
}

/* || SMALL */
@media screen and (min-width: 576px) {
   main{  /*jitni property main mein upr lgi hui h vo sb to rhengi, but jo nyi h vo add hongi & overwrite hongi*/
    justify-content: center;
    flex-flow: row wrap; /*now we do want to wrap if they take more space
    padding: 1 rem;
   */
   }
   .card{
    width: min(100%, 400px);
   }
   .card:last-child{
    order: -1;
   }

}


/* || MEDIUM */
@media screen and (min-width: 768px) {
    nav{
        display: none;

    }
    .card{
        width:min(100%, 325px);/*It is used to set a property to the minimum value between 100% of the parent container's width and a fixed value of 325 pixels.*/
        /* Breaking it down:

            If the parent container's width is less than 325 pixels, the value will be the parent container's width (100%).
            If the parent container's width is 325 pixels or more, the value will be 325 pixels. */
    }
    .card figure{
        flex-flow: column-reverse ;
    }
    /* .card figcaption{
        margin:0.1em 0;
    } */
    .card p{
        margin-top: 1rem;
    }
   
}

/* || LARGE */
@media screen and (min-width: 992px) {
   .card{
    width:min(100%, 400px);

   }
   .card:nth-child(2){
    order: -1;

   }
}

/* || XL  */
@media screen and (min-width: 1200px) {
   .card{

    width: min(calc(33% -1rem),500px); 
    /*calc function  sets the width to 33% of the parent container's width minus an additional 1 rem.*/
   }
}

/* || MOBILE DEVICE LANDSCAPE  */
@media screen and (max-height: 425px) and (min-aspect-ratio: 7/4) {
    h1{
        font-size: 1.5rem;

    }

    nav {
        display: none;
    }
    main{
        flex-flow: row nowrap;
        justify-content: space-evenly;
        align-items: stretch;
        }
    .card{
        width: min(calc(33% - 0.25rem), 200);
    }

    .card figcaption, .card p{
        font-size: 1.25rem;

    }
}